{"version":3,"file":"static/js/434.835f9b14.chunk.js","mappings":"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","sources":["modules/main/mainFetch.ts","other/layouts/mainLayout.tsx","pages/main/donate/index.tsx"],"sourcesContent":["import { Request } from \"other/request\";\r\n\r\nimport { TMakeDonation, TTargetUser, TTransactions } from \"./mainType\";\r\n\r\nexport const getUserTransactions = async ({\r\n  _id,\r\n  page,\r\n}: {\r\n  _id: string;\r\n  page: number;\r\n}) =>\r\n  Request<TTransactions>(\r\n    `/transactions/?user=${_id}&page=${page}`,\r\n    \"GET\",\r\n    null\r\n  );\r\n\r\nexport const makeDonation = async ({\r\n  _id,\r\n  currency,\r\n  amount,\r\n}: {\r\n  _id: string;\r\n  currency: string;\r\n  amount: number;\r\n}) =>\r\n  Request<TMakeDonation>(`/transactions `, \"POST\", {\r\n    _id,\r\n    currency,\r\n    amount,\r\n  });\r\n\r\nexport const getTargetUser = async ({ _id }: { _id: string }) =>\r\n  Request<TTargetUser>(`/transactions/receiver/${_id} `, \"GET\", null);\r\n","import { Container, Paper } from \"@mui/material\";\r\nimport { ReactNode } from \"react\";\r\n\r\nexport const MainLayout = ({ children }: { children: ReactNode }) => {\r\n  return (\r\n    <Container\r\n      component={Paper}\r\n      maxWidth=\"xl\"\r\n      sx={{\r\n        my: 3,\r\n        py: 3,\r\n      }}\r\n    >\r\n      {children}\r\n    </Container>\r\n  );\r\n};\r\n","import {\n  Alert,\n  Button,\n  Chip,\n  Divider,\n  Skeleton,\n  Slider,\n  Stack,\n  Typography,\n} from \"@mui/material\";\nimport { styled } from \"@mui/material/styles\";\nimport { Box } from \"@mui/system\";\nimport { getTargetUser, makeDonation } from \"modules/main/mainFetch\";\nimport { MainLayout } from \"other/layouts/mainLayout\";\nimport { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useMutation, useQuery } from \"react-query\";\nimport { useNavigate, useParams } from \"react-router\";\n\nimport smiles from \"../../../other/images/smiles.png\";\n\nconst PrettoSlider = styled(Slider)({\n  color: \"#992f2f\",\n  height: 300,\n  width: 8,\n  \"& .MuiSlider-track\": {\n    border: \"none\",\n  },\n  \"& .MuiSlider-thumb\": {\n    height: 24,\n    width: 24,\n    backgroundColor: \"#fff\",\n    border: \"2px solid currentColor\",\n    \"&:focus, &:hover, &.Mui-active, &.Mui-focusVisible\": {\n      boxShadow: \"inherit\",\n    },\n    \"&:before\": {\n      display: \"none\",\n    },\n  },\n  \"& .MuiSlider-valueLabel\": {\n    lineHeight: 1.2,\n    fontSize: 12,\n    background: \"unset\",\n    padding: 0,\n    width: 32,\n    height: 32,\n    borderRadius: \"0 50% 50%   50%\",\n    backgroundColor: \"#992f2f\",\n    transformOrigin: \"bottom left\",\n    transform: \"translate(50%, -100%) rotate(-45deg) scale(0)\",\n    \"&:before\": { display: \"none\" },\n    \"&.MuiSlider-valueLabelOpen\": {\n      transform: \"translate(300%, -75%) rotate(-45deg) scale(1)\",\n    },\n    \"& > *\": {\n      transform: \"rotate(45deg)\",\n    },\n  },\n});\n\nconst Donate = () => {\n  const { t } = useTranslation();\n  const { userId } = useParams();\n  const $getTargetUser = useQuery(`donation-target-${userId}`, () =>\n    getTargetUser({ _id: userId ?? \"\" })\n  );\n  const [amount, setAmount] = useState<\n    number | string | Array<number | string>\n  >(1);\n  const handleSliderChange = (event: Event, newValue: number | number[]) => {\n    setAmount(newValue);\n  };\n  function valueLabelFormat(value: number) {\n    return `${value}$`;\n  }\n  const navigate = useNavigate();\n  const $donate = useMutation(makeDonation);\n  const handleDonate = () => {\n    $donate.mutate(\n      {\n        _id: userId ?? \"\",\n        currency: \"USD\",\n        amount: typeof amount === \"number\" ? amount : 0,\n      },\n      {\n        onSuccess: (data) => {\n          window.open(data.forwardLink, \"_self\");\n        },\n      }\n    );\n  };\n  return (\n    <MainLayout>\n      {$getTargetUser.isLoading && <Skeleton height={300} />}\n      {$getTargetUser.data && (\n        <>\n          <Box mb={4} width={1}>\n            <Chip\n              label={\n                <Typography variant=\"h1\">\n                  {t(\"main.donate.makeDonation\")}\n                </Typography>\n              }\n            />\n            <Divider />\n          </Box>\n          <Stack\n            direction={{ lg: \"row\", md: \"row\", sm: \"column\", xs: \"column\" }}\n            gap={{ lg: 10, md: 10, sm: 5, xs: 5 }}\n          >\n            <Stack\n              height={300}\n              width={{ lg: 200, md: 200, sm: 1, xs: 1 }}\n              alignItems=\"center\"\n            >\n              <Box>\n                <Box component=\"img\" src={smiles} height={300} />\n\n                <PrettoSlider\n                  valueLabelDisplay=\"on\"\n                  orientation=\"vertical\"\n                  max={20}\n                  min={1}\n                  getAriaValueText={valueLabelFormat}\n                  valueLabelFormat={valueLabelFormat}\n                  step={1}\n                  value={typeof amount === \"number\" ? amount : 0}\n                  onChange={handleSliderChange}\n                />\n              </Box>\n            </Stack>\n            <Box width={1}>\n              <Alert severity=\"info\">\n                <Typography sx={{ mb: 1 }}>\n                  {t(\"main.donate.alertMessage\")}\n                </Typography>\n                <Stack\n                  direction={{ lg: \"row\", md: \"row\", sm: \"row\", xs: \"column\" }}\n                  gap={{ lg: 2, md: 2, sm: 2, xs: 0.5 }}\n                >\n                  <Typography>{t(\"main.donate.alertTarget\")}</Typography>\n                  <Typography fontWeight={600}>\n                    {$getTargetUser.data.name}\n                  </Typography>\n                </Stack>\n              </Alert>\n              <Stack\n                direction=\"row\"\n                gap={2}\n                mt={4}\n                justifyContent={{\n                  lg: \"flex-start\",\n                  md: \"flex-start\",\n                  sm: \"center\",\n                  xs: \"center\",\n                }}\n              >\n                <Button size=\"large\" color=\"success\" onClick={handleDonate}>\n                  {t(\"main.donate.donate\")}\n                </Button>\n                <Button\n                  size=\"large\"\n                  color=\"error\"\n                  variant=\"outlined\"\n                  onClick={() => navigate(\"/main\")}\n                >\n                  {t(\"main.donate.cancel\")}\n                </Button>\n              </Stack>\n            </Box>\n          </Stack>\n        </>\n      )}\n    </MainLayout>\n  );\n};\nexport default Donate;\n"],"names":["getUserTransactions","_id","page","Request","makeDonation","currency","amount","getTargetUser","MainLayout","children","component","Paper","maxWidth","sx","my","py","PrettoSlider","styled","Slider","color","height","width","border","backgroundColor","boxShadow","display","lineHeight","fontSize","background","padding","borderRadius","transformOrigin","transform","t","useTranslation","userId","useParams","$getTargetUser","useQuery","useState","setAmount","valueLabelFormat","value","navigate","useNavigate","$donate","useMutation","isLoading","Skeleton","data","Box","mb","Chip","label","Typography","variant","Divider","Stack","direction","lg","md","sm","xs","gap","alignItems","src","valueLabelDisplay","orientation","max","min","getAriaValueText","step","onChange","event","newValue","Alert","severity","fontWeight","name","mt","justifyContent","Button","size","onClick","mutate","onSuccess","window","open","forwardLink"],"sourceRoot":""}