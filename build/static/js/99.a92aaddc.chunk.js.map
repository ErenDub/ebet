{"version":3,"file":"static/js/99.a92aaddc.chunk.js","mappings":"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","sources":["modules/main/mainFetch.ts","other/global/pagination/pagination.tsx","other/global/table/table.tsx","other/layouts/mainLayout.tsx","pages/main/userTransactions/index.tsx"],"sourcesContent":["import { Request } from \"other/request\";\r\n\r\nimport { TMakeDonation, TTargetUser, TTransactions } from \"./mainType\";\r\n\r\nexport const getUserTransactions = async ({\r\n  _id,\r\n  page,\r\n}: {\r\n  _id: string;\r\n  page: number;\r\n}) =>\r\n  Request<TTransactions>(\r\n    `/transactions/?user=${_id}&page=${page}`,\r\n    \"GET\",\r\n    null\r\n  );\r\n\r\nexport const makeDonation = async ({\r\n  _id,\r\n  currency,\r\n  amount,\r\n}: {\r\n  _id: string;\r\n  currency: string;\r\n  amount: number;\r\n}) =>\r\n  Request<TMakeDonation>(`/transactions `, \"POST\", {\r\n    _id,\r\n    currency,\r\n    amount,\r\n  });\r\n\r\nexport const getTargetUser = async ({ _id }: { _id: string }) =>\r\n  Request<TTargetUser>(`/transactions/receiver/${_id} `, \"GET\", null);\r\n","import Pagination from \"@mui/material/Pagination\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport * as React from \"react\";\r\n\r\nexport const GlobalPagination = ({\r\n  page,\r\n  pages,\r\n  setPage,\r\n}: {\r\n  page: number;\r\n  pages: number;\r\n  setPage: React.Dispatch<React.SetStateAction<number>>;\r\n}) => {\r\n  const handleChange = (event: React.ChangeEvent<unknown>, value: number) => {\r\n    setPage(value);\r\n  };\r\n\r\n  return (\r\n    <Stack alignItems=\"center\" width={1} my={2}>\r\n      <Stack spacing={2}>\r\n        <Pagination count={pages} page={page} onChange={handleChange} />\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n};\r\n","import Paper from \"@mui/material/Paper\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport * as React from \"react\";\r\n\r\nexport const GlobalTablle = ({\r\n  head,\r\n  body,\r\n}: {\r\n  head: { label: string; id: string }[];\r\n  body: React.ReactNode;\r\n}) => {\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            {head.map((headItem) => (\r\n              <TableCell key={headItem.id}>{headItem.label}</TableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>{body}</TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n","import { Container, Paper } from \"@mui/material\";\r\nimport { ReactNode } from \"react\";\r\n\r\nexport const MainLayout = ({ children }: { children: ReactNode }) => {\r\n  return (\r\n    <Container\r\n      component={Paper}\r\n      maxWidth=\"xl\"\r\n      sx={{\r\n        my: 3,\r\n        py: 3,\r\n      }}\r\n    >\r\n      {children}\r\n    </Container>\r\n  );\r\n};\r\n","import {\r\n  Chip,\r\n  Divider,\r\n  Skeleton,\r\n  TableCell,\r\n  TableRow,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport { useAuthContext } from \"modules/login/context/authContext\";\r\nimport { getUserTransactions } from \"modules/main/mainFetch\";\r\nimport { GlobalPagination } from \"other/global/pagination/pagination\";\r\nimport { GlobalTablle } from \"other/global/table/table\";\r\nimport { MainLayout } from \"other/layouts/mainLayout\";\r\nimport { useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useQuery } from \"react-query\";\r\n\r\nconst UserTransactions = () => {\r\n  const { userInfo } = useAuthContext();\r\n  const [page, setPage] = useState(1);\r\n\r\n  const { t } = useTranslation();\r\n  const $myTransactions = useQuery(`myTransactions-${page}`, () =>\r\n    getUserTransactions({ _id: userInfo?._id ?? \"null\", page })\r\n  );\r\n  return (\r\n    <MainLayout>\r\n      <Box mb={2} width={1}>\r\n        <Chip\r\n          label={\r\n            <Typography variant=\"h1\">{t(\"header.myTransactions\")}</Typography>\r\n          }\r\n        />\r\n        <Divider />\r\n      </Box>\r\n      {$myTransactions.isLoading && <Skeleton width=\"100%\" height={500} />}\r\n      {$myTransactions.data && (\r\n        <>\r\n          <GlobalTablle\r\n            head={[\r\n              {\r\n                label: \"â„–\",\r\n                id: \"id\",\r\n              },\r\n              {\r\n                label: t(\"main.transactions.sender\"),\r\n                id: \"firstName\",\r\n              },\r\n              {\r\n                label: t(\"main.transactions.receiver\"),\r\n                id: \"lastName\",\r\n              },\r\n              {\r\n                label: t(\"main.transactions.amount\"),\r\n                id: \"email\",\r\n              },\r\n            ]}\r\n            body={$myTransactions.data.data.map((transaction, index) => {\r\n              return (\r\n                <TableRow\r\n                  key={transaction._id}\r\n                  sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\r\n                >\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {index + 1 + (page - 1) * 10}\r\n                  </TableCell>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {transaction.sender}\r\n                  </TableCell>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {transaction.receiver}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {transaction.amount} {transaction.currency}\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          />\r\n          <GlobalPagination\r\n            page={page}\r\n            pages={$myTransactions.data.totalPages}\r\n            setPage={setPage}\r\n          />\r\n        </>\r\n      )}\r\n    </MainLayout>\r\n  );\r\n};\r\nexport default UserTransactions;\r\n"],"names":["getUserTransactions","_id","page","Request","makeDonation","currency","amount","getTargetUser","GlobalPagination","pages","setPage","alignItems","width","my","spacing","count","onChange","event","value","GlobalTablle","head","body","component","Paper","sx","minWidth","map","headItem","label","id","MainLayout","children","maxWidth","py","userInfo","useAuthContext","useState","t","useTranslation","$myTransactions","useQuery","mb","variant","isLoading","height","data","transaction","index","border","scope","sender","receiver","totalPages"],"sourceRoot":""}