{"version":3,"file":"static/js/926.f8c2e9a3.chunk.js","mappings":"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","sources":["modules/admin/adminFetch.ts","other/global/pagination/pagination.tsx","other/global/table/table.tsx","other/layouts/mainLayout.tsx","pages/admin/transactions/index.tsx"],"sourcesContent":["import { TTransactions } from \"modules/main/mainType\";\nimport { Request } from \"other/request\";\n\nimport { TEditUser, TUsers } from \"./adminType\";\nimport { ChangePasswordFields } from \"./users/forms/admin-edit-password-form\";\nimport { AdminEditFields } from \"./users/forms/admin-edit-user-form\";\n\nexport const getAllTransactions = async ({ page }: { page: number }) =>\n  Request<TTransactions>(`/transactions?page=${page}`, \"GET\", null);\nexport const getAllUsers = async ({ page }: { page: number }) =>\n  Request<TUsers>(`/admin/users?page=${page}`, \"GET\", null);\nexport const editUserInformation = async ({\n  data,\n}: {\n  data: AdminEditFields;\n}) => Request<TEditUser>(`/admin/users/${data._id}`, \"PATCH\", data);\n\nexport const editUserPassword = async ({\n  _id,\n  data,\n}: {\n  _id: string;\n  data: ChangePasswordFields;\n}) => Request<TEditUser>(`/admin/users/password/${_id}`, \"PATCH\", data);\nexport const deleteUser = async ({ _id }: { _id: string }) =>\n  Request<TEditUser>(`/admin/users/${_id}`, \"DELETE\", null);\n","import Pagination from \"@mui/material/Pagination\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport * as React from \"react\";\r\n\r\nexport const GlobalPagination = ({\r\n  page,\r\n  pages,\r\n  setPage,\r\n}: {\r\n  page: number;\r\n  pages: number;\r\n  setPage: React.Dispatch<React.SetStateAction<number>>;\r\n}) => {\r\n  const handleChange = (event: React.ChangeEvent<unknown>, value: number) => {\r\n    setPage(value);\r\n  };\r\n\r\n  return (\r\n    <Stack alignItems=\"center\" width={1} my={2}>\r\n      <Stack spacing={2}>\r\n        <Pagination count={pages} page={page} onChange={handleChange} />\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n};\r\n","import Paper from \"@mui/material/Paper\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport * as React from \"react\";\r\n\r\nexport const GlobalTablle = ({\r\n  head,\r\n  body,\r\n}: {\r\n  head: { label: string; id: string }[];\r\n  body: React.ReactNode;\r\n}) => {\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            {head.map((headItem) => (\r\n              <TableCell key={headItem.id}>{headItem.label}</TableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>{body}</TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n","import { Container, Paper } from \"@mui/material\";\r\nimport { ReactNode } from \"react\";\r\n\r\nexport const MainLayout = ({ children }: { children: ReactNode }) => {\r\n  return (\r\n    <Container\r\n      component={Paper}\r\n      maxWidth=\"xl\"\r\n      sx={{\r\n        my: 3,\r\n        py: 3,\r\n      }}\r\n    >\r\n      {children}\r\n    </Container>\r\n  );\r\n};\r\n","import {\n  Chip,\n  Divider,\n  Skeleton,\n  TableCell,\n  TableRow,\n  Typography,\n} from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { getAllTransactions } from \"modules/admin/adminFetch\";\nimport { GlobalPagination } from \"other/global/pagination/pagination\";\nimport { GlobalTablle } from \"other/global/table/table\";\nimport { MainLayout } from \"other/layouts/mainLayout\";\nimport { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useQuery } from \"react-query\";\n\nconst AllTransactions = () => {\n  const [page, setPage] = useState(1);\n\n  const { t } = useTranslation();\n  const $myTransactions = useQuery(`all-transactions-${page}`, () =>\n    getAllTransactions({ page })\n  );\n  return (\n    <MainLayout>\n      <Box mb={2} width={1}>\n        <Chip\n          label={\n            <Typography variant=\"h1\">{t(\"header.allTransactions\")}</Typography>\n          }\n        />\n        <Divider />\n      </Box>\n      {$myTransactions.isLoading && <Skeleton width=\"100%\" height={500} />}\n      {$myTransactions.data && (\n        <>\n          <GlobalTablle\n            head={[\n              {\n                label: \"â„–\",\n                id: \"id\",\n              },\n              {\n                label: t(\"main.transactions.sender\"),\n                id: \"firstName\",\n              },\n              {\n                label: t(\"main.transactions.receiver\"),\n                id: \"lastName\",\n              },\n              {\n                label: t(\"main.transactions.amount\"),\n                id: \"email\",\n              },\n            ]}\n            body={$myTransactions.data.data.map((transaction, index) => {\n              return (\n                <TableRow\n                  key={transaction._id}\n                  sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n                >\n                  <TableCell component=\"th\" scope=\"row\">\n                    {index + 1 + (page - 1) * 10}\n                  </TableCell>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {transaction.sender}\n                  </TableCell>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {transaction.receiver}\n                  </TableCell>\n                  <TableCell>\n                    {transaction.amount} {transaction.currency}\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n          />\n          <GlobalPagination\n            page={page}\n            pages={$myTransactions.data.totalPages}\n            setPage={setPage}\n          />\n        </>\n      )}\n    </MainLayout>\n  );\n};\nexport default AllTransactions;\n"],"names":["getAllTransactions","page","Request","getAllUsers","editUserInformation","data","_id","editUserPassword","deleteUser","GlobalPagination","pages","setPage","alignItems","width","my","spacing","count","onChange","event","value","GlobalTablle","head","body","component","Paper","sx","minWidth","map","headItem","label","id","MainLayout","children","maxWidth","py","useState","t","useTranslation","$myTransactions","useQuery","mb","variant","isLoading","height","transaction","index","border","scope","sender","receiver","amount","currency","totalPages"],"sourceRoot":""}